     _    _ ____    _   _          _   _  ____   _____      _______ 
    | |  | |  _ \  | \ | |   /\   | \ | |/ __ \ / ____|  /\|__   __|
    | |  | | |_) | |  \| |  /  \  |  \| | |  | | (___   /  \  | |   
    | |  | |  _ <  | . ` | / /\ \ | . ` | |  | |\___ \ / /\ \ | |   
    | |__| | |_) | | |\  |/ ____ \| |\  | |__| |____) / ____ \| |   
     \____/|____/  |_| \_/_/    \_\_| \_|\____/|_____/_/    \_\_| 
     ____________________________________________________________
*
* Authors: Christopher McKiernan, Andrew Tennenbaum (constellationCheck())
* 
* Date   : 2/13/2014
*
* Program: find_space 
*
* 
	                                                                 
C++ program, utilizing OpenCV							                                                                  

________________________________________________________________________________

***FINDSTREAKS******************************************************************
findstreaks takes -t and 5 arguments, the path to the filename,
threshold, line threshold, min line length, and the max line gap.

There are two outputs for findstreaks

outputStreakData() outputs 'findstreaks.txt'.
Each line in 'findstreaks.txt' represents a different streak
The numbers on that line represent the following data in this order:
*
* midpoint x, midpoint y, length, angle, brightness
*

outputImage() outputs 'streak_test.png'.
This image is a copy of the original image with the following drawn on it:
*
* A line representing the streak in red.
* A small circle at the endpoints in green.
* A small circle at the midpoint in blue.
*
outputImage() is used for checking performance, and is usually commented out.

An example of calling findstreaks is shown below:
$ ./findspace -t image.ext 128 40 40 40
________________________________________________________________________________

***FINDSTARS********************************************************************
findstars takes -s and two arguments the path to the filename and the threshold.

There are three outputs for findstars

outputStarLocations() outputs 'findstars.txt'
Each line in 'findstars.txt' represents a different star
The numbers on that line represent the following data in this order:
*
* centroid x, centroid y
*

outputImage() outputs 'star_test.png".
This image is a copy of the original image with the following drawn on it:
*
* A plus sign drawn on the star's centroid in red.
*

getStarVec() returns a vector of complex<float> which hold
the centroid's x as the real, and the centroid's y as the imaginary.

This vector is needed if one wants to check for constellation matches.
It is the required argument for the class Constellations (see section below).

An example of calling findstars is shown below:
$ ./findspace -s image.ext 128
________________________________________________________________________________

***CONSTELLATIONS***************************************************************
constellations is called at the moment when findstars is called, it takes
the vector of complex<float> returned from getStarVec().

When the class is instantiated it initializes fileVec, which will hold all the
filepaths of the various textfile constellation database.

This is done by parsing the text file text/fl.txt which holds the filepaths
An example of a working fl.txt is as follows:

text/a.txt text/b.txt text/c.txt

This would mean fileVec would be initialized with the three above filepaths.

After fileVec is initialized, the program loops through i times, i being the
number of files stored in fileVec. In this loop, it updates a vector called
constellationVec that holds complex<float> that holds the data stored in the
current text file.

If a.txt had the following data:

12.5 58 500 400

constellationVec[0] = complex(12.5, 58) constellationVec[1] = complex(500,400)

If the update is successful, using both constellationVec and the starVec
returned from FindStars, constellationCheck() is ran and determines whether
the current constellation matches the original stars.
================================================================================




